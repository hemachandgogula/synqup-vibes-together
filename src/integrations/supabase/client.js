
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

const SUPABASE_URL = "https://itrjjjrwthdhmeysgjlm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml0cmpqanJ3dGhkaG1leXNnamxtIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU2MDY3MjYsImV4cCI6MjA2MTE4MjcyNn0.vwTYvDOllmfoBmow8-2ltytkd0vipMIJtsPqABC7Xfo";

// Initialize the Supabase client with enhanced persistence and stability
export const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: false,
    storage: typeof window !== 'undefined' ? {
      getItem: (key) => {
        try {
          return localStorage.getItem(key);
        } catch (e) {
          console.warn('Could not access localStorage:', e);
          return null;
        }
      },
      setItem: (key, value) => {
        try {
          localStorage.setItem(key, value);
        } catch (e) {
          console.warn('Could not write to localStorage:', e);
        }
      },
      removeItem: (key) => {
        try {
          localStorage.removeItem(key);
        } catch (e) {
          console.warn('Could not remove from localStorage:', e);
        }
      }
    } : undefined,
    flowType: 'pkce',
    debug: process.env.NODE_ENV === 'development'
  },
  realtime: {
    params: {
      eventsPerSecond: 20,
      timeout: 30000,
      heartbeatIntervalMs: 15000
    }
  },
  global: {
    headers: {
      'X-Client-Info': 'supabase-js-web'
    }
  }
});

// Enhanced session recovery
if (typeof window !== 'undefined') {
  // Handle connection recovery when the tab becomes visible
  document.addEventListener('visibilitychange', () => {
    if (document.visibilityState === 'visible') {
      // Check if session is still valid
      supabase.auth.getSession().then(({ data: { session }, error }) => {
        if (error) {
          console.error('Session check error:', error);
        } else if (session) {
          console.log('Session recovered after tab visibility change');
          // Refresh the session to ensure it's up to date
          supabase.auth.refreshSession();
        }
      });
    }
  });

  // Handle online/offline events
  window.addEventListener('online', () => {
    console.log('Connection restored, refreshing session...');
    supabase.auth.refreshSession();
  });

  window.addEventListener('offline', () => {
    console.log('Connection lost');
  });
}
